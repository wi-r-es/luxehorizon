# Generated by Django 5.1.1 on 2024-11-05 08:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('hotel_management', '0001_initial'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('P', 'Pending'), ('C', 'Confirmed'), ('R', 'Rejected')], default='P', max_length=1, verbose_name='Reservation Status')),
                ('total_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='users.user')),
            ],
            options={
                'db_table': 'reservation',
            },
        ),
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('cc_pass', models.CharField(max_length=20, verbose_name='CC or Passport')),
                ('phone', models.CharField(max_length=20)),
                ('full_address', models.CharField(max_length=160)),
                ('postal_code', models.CharField(max_length=8)),
                ('city', models.CharField(max_length=100)),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guests', to='reservation.reservation')),
            ],
            options={
                'db_table': 'guest',
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descriptive', models.CharField(choices=[('A', 'High'), ('B', 'Low'), ('F', 'Festival')], max_length=1, verbose_name='Season Type')),
                ('begin_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
            options={
                'db_table': 'season',
                'unique_together': {('descriptive', 'begin_date', 'end_date')},
            },
        ),
        migrations.AddField(
            model_name='reservation',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reservation.season'),
        ),
        migrations.CreateModel(
            name='PricePerSeason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax', models.FloatField()),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season_prices', to='reservation.season')),
            ],
            options={
                'db_table': 'price_per_season',
            },
        ),
        migrations.CreateModel(
            name='RoomReservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_reservation', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_reservations', to='reservation.reservation')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_reservations', to='hotel_management.room')),
            ],
            options={
                'db_table': 'room_reservation',
                'unique_together': {('reservation', 'room')},
            },
        ),
    ]
