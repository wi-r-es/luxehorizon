# Generated by Django 5.1.1 on 2024-11-05 08:54

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models

def create_default_permissions(apps, schema_editor):
    AccPermission = apps.get_model('users', 'AccPermission')
    AccPermission.objects.get_or_create(id=1, perm_description='Admin', perm_level=1)
    AccPermission.objects.get_or_create(id=2, perm_description='Manager', perm_level=2)
    AccPermission.objects.get_or_create(id=3, perm_description='Funcionário', perm_level=3)


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('perm_description', models.CharField(max_length=100)),
                ('perm_level', models.IntegerField(choices=[(1, 'Admin'), (2, 'Manager'), (3, 'Funcionário')])),
            ],
            options={
                'db_table': 'acc_permission',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('hashed_password', models.CharField(max_length=255)),
                ('inactive', models.BooleanField(default=False)),
                ('nif', models.CharField(max_length=20, unique=True, verbose_name='NIF')),
                ('phone', models.CharField(max_length=20, unique=True)),
                ('full_address', models.CharField(max_length=160)),
                ('postal_code', models.CharField(max_length=8)),
                ('city', models.CharField(max_length=100)),
                ('utp', models.CharField(choices=[('C', 'Client'), ('F', 'Employee')], default='C', max_length=1)),
            ],
            options={
                'db_table': 'u_user',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.user')),
            ],
            options={
                'db_table': 'u_client',
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.user')),
                ('social_security', models.IntegerField()),
            ],
            options={
                'db_table': 'u_employee',
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='UserPasswordsDictionary',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='password_history', serialize=False, to='users.user')),
                ('hashed_password', models.CharField(max_length=255)),
                ('valid_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('valid_to', models.DateTimeField()),
            ],
            options={
                'db_table': 'u_user_passwords_dictionary',
            },
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.CheckConstraint(condition=models.Q(('utp__in', ['C', 'F'])), name='ck_utp'),
        ),
        migrations.AddField(
            model_name='employee',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.accpermission'),
        ),
        # Creates the default permissions
         migrations.RunPython(create_default_permissions),
    ]
